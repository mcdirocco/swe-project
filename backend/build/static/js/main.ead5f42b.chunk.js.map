{"version":3,"sources":["components/Navbar/Navbar.js","components/AdminPortal.js","API.js","components/Landing.js","components/Login.js","components/MemberData.js","components/AccountDetails.js","components/CreateEvent/CreateEvent.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarClass","useState","loginVisible","setLoginVisible","membersVisible","setMembersVisible","userName","setUserName","useEffect","a","localStorage","getItem","name","isAdmin","console","log","setItem","window","location","reload","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","Button","variant","AdminPortal","hostUrl","request","url","body","fetch","credentials","headers","accept","referrerPolicy","JSON","stringify","method","mode","res","json","createUser","firstname","lastname","username","password","email","major","year","loginUser","undefined","token","getUser","user","admin","getUsers","getEvents","createEvent","title","description","date","startTime","endTime","attendEvent","eventID","code","localizer","momentLocalizer","moment","eventVar","submitFunc","e","preventDefault","alert","Event","event","popoverClickRootClose","Popover","style","zIndex","Modal","Dialog","Title","Body","onSubmit","Group","controlId","Label","Control","type","onChange","target","value","OverlayTrigger","trigger","rootClose","container","this","placement","overlay","Landing","state","seen","events","String","start","Date","end","loaded","data","message","i","length","dateObj","getFullYear","month","getMonth","day","getDate","attendees","_id","setState","Container","fluid","Row","Col","md","defaultDate","defaultView","display","margin","padding","borderRadius","height","backgroundColor","components","color","Component","Login","redirect","setRedirect","setUsername","setPassword","firstNameSI","setFirstNameSI","lastNameSI","setLastNameSI","usernameSI","setUsernameSI","passwordSI","setPasswordSI","emailSI","setEmailSI","confirmPassSI","setConfirmPassSI","majorSI","setMajorSI","yearSI","setYearSI","submission","TOKEN","submissionSI","span","offset","placeholder","to","MemData","isLoading","setIsLoading","members","setMembers","setUser","setEvents","setEvent","membersOrEvents","setMembersOrEvents","searchQuery","setSearchQuery","searchUsers","setSearchUsers","searchEvents","setSearchEvents","users","onClick","aria-pressed","filter","n","toLowerCase","includes","aria-label","htmlFor","multiple","map","align","points","attendeesNames","AccountDetails","setPoints","loading","setLoading","removeItem","Popup","dateIn","marginTop","React","App","exact","path","component","MemberData","CreateEvent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gbAmEeA,EA7DK,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACjBC,EADiB,KACHC,EADG,OAEoBF,oBAAS,GAF7B,mBAEjBG,EAFiB,KAEDC,EAFC,OAGQJ,mBAAS,SAHjB,mBAGjBK,EAHiB,KAGPC,EAHO,KAKtBC,oBAAS,sBAAC,8BAAAC,EAAA,sEACWC,aAAaC,QAAQ,QADhC,cACFC,EADE,gBAEcF,aAAaC,QAAQ,WAFnC,OAEFE,EAFE,OAGNC,QAAQC,IAAI,iBAAkBF,GAClB,OAATD,GACCL,EAAYK,GACZT,GAAgB,GAEhBE,EAA8B,SAAZQ,KAIlBN,EAAY,SACZJ,GAAgB,GAChBU,GAAU,GAdR,4CAkBY,SADNH,aAAaC,QAAQ,aAE7BD,aAAaM,QAAQ,UAAW,SAChCC,OAAOC,SAASC,QAAO,IAEpBT,aAAaC,QAAQ,QAChC,OACI,eAACS,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,UAAnB,sCACA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,eAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,UAEI,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,cAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,sBACCpB,GAAkB,cAACyB,EAAA,EAAIE,KAAL,CAAUP,KAAK,aAAf,qBAKnB,cAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,QAAf,sBAIJ,eAACQ,EAAA,EAAD,CAAMC,QAAM,EAAZ,UACI,eAACJ,EAAA,EAAIE,KAAL,CAAUD,UAAW,gBAArB,sBAAgDxB,EAAhD,QACEJ,GAAgB,cAAC2B,EAAA,EAAIE,KAAL,CAAUP,KAAK,iBAAf,wBACjBtB,GAAgB,cAACgC,EAAA,EAAD,CAAQV,KAAM,SAAUW,QAAQ,UAAhC,6B,yBC5CpBC,EAVG,WAChB,OACE,qBAAKN,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,wC,+HCGFO,EAAU,gC,SAEDC,E,gFAAf,WAAuBC,EAAKC,GAA5B,eAAA/B,EAAA,sEACoBgC,MAAMJ,EAAUE,EAC5B,CACIG,YAAa,OACbC,QAAS,CACLC,OAAQ,iDACR,kBAAmB,iBACnB,eAAgB,iCAChB,iBAAkB,OAClB,iBAAkB,cAEtBC,eAAgB,6BAChBL,KAAMM,KAAKC,UAAUP,GACrBQ,OAAQ,OACRC,KAAM,SAdlB,cACQC,EADR,gBAiBgBA,EAAIC,OAjBpB,cAiBID,EAjBJ,yBAkBWA,GAlBX,4C,sBAuBO,SAAeE,EAAtB,8C,4CAAO,WAA0BC,EAAWC,EAAUC,EAAUC,EAAUC,EAAOC,EAAOC,GAAjF,SAAAlD,EAAA,sEACU6B,EAAQ,eAAgB,CACjCe,UAAWA,EACXC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,EACVC,MAAOA,EACPC,MAAOA,EACPC,KAAMA,IARP,oF,sBAYA,SAAeC,EAAtB,oC,4CAAO,WAAyBL,EAAUC,GAAnC,iBAAA/C,EAAA,sEACa6B,EAAQ,cAAe,CACnCiB,SAAUA,EACVC,SAAUA,IAHX,eAKcK,KAJbX,EADD,QAKIY,MALJ,0CAMQ,GANR,cAQHpD,aAAaM,QAAQ,QAASkC,EAAIY,OAR/B,SAScC,EAAQb,EAAIY,OAT1B,cASCE,EATD,OAUHtD,aAAaM,QACT,OACAgD,EAAKA,KAAKX,WAEd3C,aAAaM,QAAQ,UAAWgD,EAAKA,KAAKC,OAdvC,kBAeIf,EAAIY,OAfR,6C,sBAoBA,SAAeI,IAAtB,+B,4CAAO,4BAAAzD,EAAA,sEACagC,MAAMJ,EAAU,SAD7B,cACCa,EADD,gBAEUA,EAAIC,OAFd,oF,sBAKA,SAAeY,EAAtB,kC,4CAAO,WAAuBD,GAAvB,eAAArD,EAAA,sEACa6B,EAAQ,gBAAiB,CACrCwB,MAAOA,IAFR,cACCZ,EADD,yBAIIA,GAJJ,4C,sBAOA,SAAeiB,IAAtB,+B,4CAAO,4BAAA1D,EAAA,sEACagC,MAAMJ,EAAU,UAD7B,cACCa,EADD,gBAEUA,EAAIC,OAFd,oF,sBAOA,SAAeiB,EAAtB,4C,4CAAO,WAA2BC,EAAOC,EAAaC,EAAMC,EAAWC,EAASjB,GAAzE,SAAA/C,EAAA,sEACU6B,EAAQ,gBAAgB,CACjC+B,MAAOA,EACPC,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXC,QAASA,EACTjB,SAAUA,IAPX,oF,sBAWA,SAAekB,EAAtB,sC,4CAAO,WAA2BZ,EAAOa,EAASnB,GAA3C,SAAA/C,EAAA,6DACHK,QAAQC,IAAI+C,EAAOa,EAASnB,GADzB,SAEUlB,EAAQ,gBAAiB,CAClCwB,MAAOA,EACPa,QAASA,EACTnB,SAAUA,IALX,oF,sBC/EP,IACIoB,EADEC,EAAYC,YAAgBC,KAE9BC,EAAW,CACXpD,GAAI,IAEJf,GAAU,E,SAECoE,G,iFAAf,WAA0BC,GAA1B,eAAAzE,EAAA,yDACIyE,EAAEC,sBAEUtB,IAATe,EAHP,iEAMsBlE,aAAaC,QAAQ,SAN3C,cAMQmD,EANR,gBAOqBC,EAAQD,GAP7B,qBAQIhD,QAAQC,IAAI+C,EAAOkB,EAASpD,GAAIgD,GARpC,UASUF,EAAYZ,EAAOkB,EAASpD,GAAIgD,GAT1C,QAUIQ,MAAM,mBAVV,6C,sBAgBA,SAASC,GAAT,GAA2B,IAAVC,EAAS,EAATA,MACTC,EACA,cAACC,EAAA,EAAD,CAAS5D,GAAG,mCAAmC6D,MAAO,CAAEC,OAAQ,KAAhE,SACI,eAACC,EAAA,EAAMC,OAAP,WACQ,cAACD,EAAA,EAAME,MAAP,2BAEJ,cAACF,EAAA,EAAMG,KAAP,UACI,eAAC9D,EAAA,EAAD,CAAM+D,SAAUd,GAAhB,UACI,eAACjD,EAAA,EAAKgE,MAAN,CAAYC,UAAU,uBAAtB,UACI,cAACjE,EAAA,EAAKkE,MAAN,qCACA,cAAClE,EAAA,EAAKmE,QAAN,CACIC,KAAK,SACLC,SAAU,SAACnB,GAAON,EAAOM,EAAEoB,OAAOC,YAG1C,cAACrE,EAAA,EAAD,CAAQkE,KAAK,SAASjE,QAAQ,UAA9B,8BAcpB,OADA6C,EAAWM,EAEP,8BACI,8BACI,cAACkB,EAAA,EAAD,CACI5E,GAAG,OACH6E,QAAQ,QACRC,WAAS,EACTC,UAAWC,KACXC,UAAU,SACVC,QAASvB,EANb,SAQI,8BAAMD,EAAMjB,c,IAiHjB0C,G,4MAxGXC,MAAQ,CACJC,MAAM,EACNC,OAAQ,CACJ,CACItF,GAAIuF,OACJ9C,MAAO8C,OACPC,MAAOC,KACPC,IAAKD,OAGbE,QAAQ,G,8FAGZ,0CAAA9G,EAAA,4DAEsB,SADFC,aAAaC,QAAQ,aAEjCD,aAAaM,QAAQ,UAAW,SAChCC,OAAOC,SAASC,QAAO,IAJ/B,SAMuBgD,IANvB,cAMUqD,EANV,gBAOsB9G,aAAaC,QAAQ,SAP3C,cAOQmD,EAPR,iBAQqBC,EAAQD,GAR7B,QAmBI,IAXIE,EARR,OASIlD,QAAQC,IAAIiD,EAAKyD,SACG,4BAAjBzD,EAAKyD,UACJ3G,QAAQC,IAAIiD,EAAKyD,SACjB/G,aAAaM,QAAQ,UAAWgD,EAAKA,KAAKC,OAC1CpD,EAAUmD,EAAKA,KAAKC,OAMfyD,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC7Bd,KAAKI,MAAME,OAAOQ,GAAK,GACnBE,EAAU,IAAIP,KAAKG,EAAKE,GAAGnD,MAC/BzD,QAAQC,IAAI6G,GACRjE,EAAOiE,EAAQC,cACfC,EAAQF,EAAQG,WAChBC,EAAMJ,EAAQK,UAAY,EAC9BrB,KAAKI,MAAME,OAAOQ,GAAGN,MAAQ,IAAIC,KAAK1D,EAAMmE,EAAOE,GACnDpB,KAAKI,MAAME,OAAOQ,GAAGJ,IAAM,IAAID,KAAK1D,EAAMmE,EAAOE,GACjDpB,KAAKI,MAAME,OAAOQ,GAAGrD,MAAQmD,EAAKE,GAAGrD,MACrCuC,KAAKI,MAAME,OAAOQ,GAAGQ,UAAYV,EAAKE,GAAGQ,UACzCtB,KAAKI,MAAME,OAAOQ,GAAG9F,GAAK4F,EAAKE,GAAGS,IAClCrH,QAAQC,IAAI6F,KAAKI,MAAME,OAAOQ,GAAG9F,IA/BzC,iBAmCUgF,KAAKwB,SAAS,CAAEb,QAAQ,IAnClC,iD,0EAsCA,WACI,OAAKX,KAAKI,MAAMO,OAUZ,qBAAKzF,UAAU,MAAf,SACI,cAACuG,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,8BACI,cAAC,IAAD,CACI5D,UAAWA,EACX6D,YAAa,IAAIrB,KACjBsB,YAAY,QACZzB,OAAQN,KAAKI,MAAME,OACnBzB,MAAO,CACHmD,QAAS,OACTC,OAAQ,MACRC,QAAS,MACTC,aAAc,MACdC,OAAQ,QACRC,gBAAiB,WAErBC,WAAY,CACR5D,MAAOD,WAKV,IAAZxE,GAAoB,cAAC2H,EAAA,EAAD,CAAKC,GAAI,EAAT,SACjB,qBAAK3G,UAAU,YAAf,SACI,cAACI,EAAA,EAAD,CACIJ,UAAU,oBACVN,KAAK,eACL2H,MAAM,UAHV,wCAlChB,qBAAKrH,UAAU,MAAf,SACI,cAACuG,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,oBAAI7C,MAAO,CAAEuD,OAAQ,QAASG,MAAO,SAArC,gC,GA1DFC,aCwDPC,I,OAjID,WAAO,IAAD,EACcpJ,oBAAS,GADvB,mBACXqJ,EADW,KACDC,EADC,OAGctJ,mBAAS,IAHvB,mBAGXsD,EAHW,KAGDiG,EAHC,OAIcvJ,mBAAS,IAJvB,mBAIXuD,EAJW,KAIDiG,EAJC,OAQoBxJ,mBAAS,IAR7B,mBAQXyJ,EARW,KAQEC,EARF,OASkB1J,mBAAS,IAT3B,mBASX2J,EATW,KASCC,EATD,OAUkB5J,mBAAS,IAV3B,mBAUX6J,EAVW,KAUCC,EAVD,OAWkB9J,mBAAS,IAX3B,mBAWX+J,EAXW,KAWCC,EAXD,OAYYhK,mBAAS,IAZrB,mBAYXiK,EAZW,KAYFC,EAZE,OAawBlK,mBAAS,IAbjC,mBAaXmK,EAbW,KAaIC,EAbJ,OAcYpK,mBAAS,IAdrB,mBAcXqK,EAdW,KAcFC,EAdE,OAeUtK,mBAAS,IAfnB,oBAeXuK,GAfW,MAeHC,GAfG,MAmBhBjK,qBAAU,cAUP,IAEH,IAAMkK,GAAU,uCAAG,WAAOxF,GAAP,eAAAzE,EAAA,6DACfyE,EAAEC,iBADa,SAEGvB,EAAUL,EAAUC,GAFvB,WAGD,KADVmH,EAFW,+BAIXvF,MAAM,mCAJK,0BAOf1E,aAAaM,QAAQ,QAAS2J,GAC9BjK,aAAaM,QAAQ,UAAW,QAChCuI,GAAY,GATG,4CAAH,sDAYVqB,GAAY,uCAAG,WAAO1F,GAAP,iBAAAzE,EAAA,yDACjByE,EAAEC,iBACC6E,IAAeI,EAFD,uBAGbhF,MAAM,mCAHO,0CAOKhC,EAAWsG,EAAaE,EAAYE,EAAYE,EAAYE,EAASI,EAASE,IAPnF,UAOTG,EAPS,OAQbvF,WAA0BvB,IAApB8G,EAAMtH,UAA0B,iCAClCsH,EAAMtH,UAAY,eAAiBsH,EAAMrH,SAAW,eACpDqH,EAAMpH,SAAW,YAAcoH,EAAMlH,MAAQ,6BAC1BI,IAApB8G,EAAMtH,UAXI,kCAYSO,EAAUkG,EAAYE,GAZ/B,QAYLW,EAZK,OAaTjK,aAAaM,QAAQ,QAAS2J,GAC9BjK,aAAaM,QAAQ,UAAW,QAChCuI,GAAY,GAfH,4CAAH,sDAoBlB,OACE,sBAAKzH,UAAU,iBAAf,UACI,cAACuG,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,CAAKzG,UAAU,cAAf,UACI,eAAC0G,EAAA,EAAD,CAAK1G,UAAU,eAAe2G,GAAI,CAACoC,KAAM,GAAzC,gBACI,sBAAK/I,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,oBACA,qBAAKA,UAAU,YAAf,SACI,eAAC0G,EAAA,EAAD,CAAKC,GAAI,CAACoC,KAAM,EAAGC,OAAQ,GAA3B,UACI,cAAC9I,EAAA,EAAKkE,MAAN,uBACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,gBAAgB2E,YAAY,WAAW1E,SAAU,SAAAnB,GAAC,OAAIsE,EAAYtE,EAAEoB,OAAOC,UAC9F,cAACvE,EAAA,EAAKkE,MAAN,uBACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,WAAW2E,YAAY,WAAW1E,SAAU,SAAAnB,GAAC,OAAIuE,EAAYvE,EAAEoB,OAAOC,kBAIrG,cAACvE,EAAA,EAAD,CAAMF,UAAU,gBAAgBiE,SAAU2E,GAA1C,SACI,eAAC1I,EAAA,EAAKgE,MAAN,WACI,cAAC9D,EAAA,EAAD,CAAQC,QAAQ,UAAUL,UAAU,yBAAyBsE,KAAK,SAAlE,mBACA,oBAAGtE,UAAU,wCAAb,cAAsD,mBAAGN,KAAK,IAAIM,UAAU,aAAtB,yCAMlE,eAAC0G,EAAA,EAAD,CAAK1G,UAAU,gBAAgB2G,GAAI,CAACoC,KAAM,GAA1C,UACI,sBAAK/I,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,qBACA,qBAAKA,UAAU,YAAf,SACA,cAACE,EAAA,EAAD,CAAMF,UAAU,iBAAhB,SACI,eAACyG,EAAA,EAAD,WACA,eAACC,EAAA,EAAD,CAAKC,GAAI,CAACoC,KAAM,GAAhB,UACI,cAAC7I,EAAA,EAAKkE,MAAN,yBACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,gBAAgBG,MAAOmD,EAAaqB,YAAY,aAAa1E,SAAU,SAAAnB,GAAMyE,EAAezE,EAAEoB,OAAOC,UACxH,cAACvE,EAAA,EAAKkE,MAAN,wBACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,gBAAgBG,MAAOqD,EAAYmB,YAAY,YAAY1E,SAAU,SAAAnB,GAAM2E,EAAc3E,EAAEoB,OAAOC,UACrH,cAACvE,EAAA,EAAKkE,MAAN,uBACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,gBAAgBG,MAAOuD,EAAYiB,YAAY,WAAW1E,SAAU,SAAAnB,GAAM6E,EAAc7E,EAAEoB,OAAOC,UACpH,cAACvE,EAAA,EAAKkE,MAAN,oBACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,QAAQG,MAAO2D,EAASa,YAAY,QAAQ1E,SAAU,SAAAnB,GAAMiF,EAAWjF,EAAEoB,OAAOC,aAEvG,eAACiC,EAAA,EAAD,CAAKC,GAAI,CAACoC,KAAM,GAAhB,UACI,cAAC7I,EAAA,EAAKkE,MAAN,uBACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,WAAWG,MAAOyD,EAAYe,YAAY,WAAW1E,SAAU,SAAAnB,GAAM+E,EAAc/E,EAAEoB,OAAOC,UAC/G,cAACvE,EAAA,EAAKkE,MAAN,oCACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,WAAWG,MAAO6D,EAAeW,YAAY,wBAAwB1E,SAAU,SAAAnB,GAAMmF,EAAiBnF,EAAEoB,OAAOC,UAClI,cAACvE,EAAA,EAAKkE,MAAN,2BACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,gBAAgBG,MAAO+D,EAASS,YAAY,eAAc1E,SAAU,SAAAnB,GAAMqF,EAAWrF,EAAEoB,OAAOC,UACjH,cAACvE,EAAA,EAAKkE,MAAN,oCACA,cAAClE,EAAA,EAAKmE,QAAN,CAAcC,KAAK,gBAAgBG,MAAOiE,GAAQO,YAAY,wBAAwB1E,SAAU,SAAAnB,GAAMuF,GAAUvF,EAAEoB,OAAOC,uBAMrI,cAACvE,EAAA,EAAD,CAAM+D,SAAU6E,GAAhB,SACE,cAAC1I,EAAA,EAAD,CAAQkE,KAAK,SAASjE,QAAQ,UAAUL,UAAU,yBAAlD,+BAKbwH,GAAY,cAAC,IAAD,CAAU0B,GAAG,kBCgFrBC,I,OAlNC,WAAO,IAAD,EACchL,oBAAS,GADvB,mBACbiL,EADa,KACFC,EADE,OAEUlL,wBAAS4D,GAFnB,mBAEbuH,EAFa,KAEJC,EAFI,OAGIpL,qBAHJ,mBAGb+D,EAHa,KAGPsH,EAHO,OAIQrL,qBAJR,mBAIbiH,EAJa,KAILqE,EAJK,OAKMtL,qBALN,mBAKbqF,EALa,KAKNkG,EALM,OAM0BvL,oBAAS,GANnC,mBAMbwL,EANa,KAMIC,EANJ,OASkBzL,mBAAS,IAT3B,mBASb0L,EATa,KASAC,EATA,OAUkB3L,wBAAS4D,GAV3B,mBAUbgI,EAVa,KAUAC,EAVA,OAWoB7L,wBAAS4D,GAX7B,mBAWbkI,EAXa,KAWCC,EAXD,KAalBxL,oBAAS,sBAAC,8BAAAC,EAAA,sEACYyD,IADZ,cACF+H,EADE,gBAEa9H,IAFb,OAEF+C,EAFE,OAGNmE,EAAWY,GACXH,EAAeG,GACfX,EAAQW,EAAM,IACdV,EAAUrE,GACV8E,EAAgB9E,GAChBsE,EAAStE,EAAO,IAChBiE,GAAa,GATP,4CAUP,IAwBH,OAAID,EAEI,qBAAKpJ,UAAU,MAAf,SACI,cAACuG,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,oBAAI7C,MAAO,CAAEuD,OAAQ,QAASG,MAAO,SAArC,4BA8BZ,sBAAKrH,UAAU,kBAAf,UACI,wBAAQA,UAAU,kBAAlB,4BACA,eAACuG,EAAA,EAAD,WACI,eAACE,EAAA,EAAD,CAAKzG,UAAU,aAAf,UACI,cAAC0G,EAAA,EAAD,UACI,cAACtG,EAAA,EAAD,CACIC,QAAQ,UACRL,UAAU,sBACV2D,MAAO,CAAEoF,KAAM,EAAGC,OAAQ,GAC1BoB,QAAS,kBAAMR,GAAmB,IAJtC,uBASJ,cAAClD,EAAA,EAAD,UACI,cAACtG,EAAA,EAAD,CACIC,QAAQ,UACRL,UAAU,sBACVqK,eAAa,OACbD,QAAS,kBAAMR,GAAmB,IAJtC,yBAUR,eAACnD,EAAA,EAAD,CAAKzG,UAAU,eAAf,UACI,eAAC0G,EAAA,EAAD,WACI,eAACxG,EAAA,EAAD,CAAMF,UAAU,2BAA2BiE,SAnFzC,SAAAb,GAClBA,EAAEC,iBACCsG,EACCK,EAAeV,EAAQgB,QAAO,SAAC1E,EAAG2E,GAG9B,OADAvL,QAAQC,IAAI,iBAAkB4K,GACvBjE,EAAErE,UAAUiJ,cAAcC,SAASZ,GACnCjE,EAAEpE,SAASgJ,cAAcC,SAASZ,OAM7CK,EAAgB9E,EAAOkF,QAAO,SAAC1E,EAAG2E,GAG9B,OADAvL,QAAQC,IAAI,iBAAkB4K,GACvBjE,EAAErD,MAAMiI,cAAcC,SAASZ,QAmE9B,UACI,uBACI7J,UAAU,uBACVsE,KAAK,SACL2E,YAAaU,EAAkB,sBAAwB,qBACvDe,aAAW,SACXnG,SAAU,SAAAf,GAAK,OAAIsG,EAAetG,EAAMgB,OAAOC,MAAM+F,kBAEzD,wBACIxK,UAAU,uCACVsE,KAAK,SAFT,uBAOJ,uBACA,sBAAKtE,UAAU,aAAf,UACI,wBACI2K,QAAQ,4BACRhH,MAAO,CAAE0D,MAAO,SAFpB,qBAIasC,EAAkB,UAAY,YAE3C,wBACIiB,UAAQ,EACR5K,UAAU,eACVF,GAAG,4BAHP,SAKK6J,EACGI,EAAYc,KAAI,SAAA3I,GAAI,OAAI,yBAAQkI,QAAS,kBAAMZ,EAAQtH,IAA/B,UAAuCA,EAAKV,SAA5C,KAAwDU,EAAKX,gBACrF0I,EAAaY,KAAI,SAAAzF,GAAM,OAAI,wBAAQgF,QAAS,kBAAMV,EAAStE,IAAhC,SAA0CA,EAAO7C,mBAK5F,eAACmE,EAAA,EAAD,WAII,sBAAK1G,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,cAA+B2J,EAAkBzH,EAAKX,UAAY,IAAMW,EAAKV,SAAW,SAAxF,OACA,sBAAKxB,UAAU,YAAf,UACI,eAACyG,EAAA,EAAD,CAAKzG,UAAU,WAAf,UACI,cAAC0G,EAAA,EAAD,CAAKC,GAAI,CAACoC,KAAM,GAAhB,SACI,qBAAI/I,UAAU,aAAa8K,MAAM,OAAjC,UACKnB,EACG,YACA,aAEJ,uBACCA,EACG,UACA,GACJ,uBACCA,EACG,SACA,gBACJ,uBACCA,EACG,iBACA,QAGZ,cAACjD,EAAA,EAAD,CAAKC,GAAI,CAACoC,KAAM,GAAhB,SACI,qBAAI/I,UAAU,aAAa8K,MAAM,OAAjC,UACKnB,EACGzH,EAAKT,SACL+B,EAAMjB,MACV,uBACCoH,EACGzH,EAAK6I,OACL,GACJ,uBACCpB,EACGzH,EAAKN,MACL4B,EAAMwH,eAAeH,KAAI,SAAA/L,GAAS,OAAOA,EAAO,QACpD,uBACC6K,EACGzH,EAAKL,KACL,WAIhB,mBAAG7B,UAAU,oBAKrB,qCCjJTiL,I,OAlDQ,WAAO,IAAD,EACC9M,mBAAS,GADV,mBACpB4M,EADoB,KACZG,EADY,OAEH/M,wBAAS4D,GAFN,mBAEpBG,EAFoB,KAEdsH,EAFc,OAGGrL,oBAAS,GAHZ,mBAGpBgN,EAHoB,KAGXC,EAHW,KAoBzB,OAhBA1M,oBAAS,sBAAC,4BAAAC,EAAA,sEACWsD,EAAQrD,aAAaC,QAAQ,UADxC,OACFqD,EADE,OAENsH,EAAQtH,GACRgJ,EAAUhJ,EAAKA,KAAK6I,QACpBK,GAAW,GACXA,GAAW,GALL,4CAgBPD,EAEK,qBAAKnL,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,gDAOZ,qBAAKA,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAIA,UAAU,cAAd,wBAA4C+B,IAATG,EAAqB,QAAUA,EAAKA,KAAKX,UAAY,IAAMW,EAAKA,KAAKV,SAAxG,OACI,qBAAKxB,UAAU,YAAf,SACI,eAAC0G,EAAA,EAAD,CAAKC,GAAI,CAACoC,KAAM,GAAIC,OAAQ,GAA5B,UACI,sDAA6BjH,IAATG,EAAqB,OAASA,EAAKA,KAAKP,SAC5D,iDAAwBI,IAATG,EAAqB,OAASA,EAAKA,KAAKT,SAAvD,OACA,gDAAmBsJ,KACnB,uBACA,cAAC3K,EAAA,EAAD,CAAQV,KAAK,WAAW0K,QAAS,WAAQxL,aAAayM,WAAW,QAASzM,aAAayM,WAAW,SAAUzM,aAAaM,QAAQ,UAAW,UAAYmB,QAAS,SAAUL,UAAW,GAAtL,kCC+EjBsL,I,mNAtHbpG,MAAQ,CACN3C,MAAO,YACPC,YAAa,oBACbC,UAAMV,EACNyD,SAAKzD,EACLW,eAAWX,EACXY,aAASZ,EACTL,SAAU,I,EAGZuC,S,uCAAW,WAAOb,GAAP,iBAAAzE,EAAA,6DACTyE,EAAEC,iBACFrE,QAAQC,IAAI,QACZD,QAAQC,IAAI,EAAKiG,MAAMI,OACnBiG,EAAStI,IAAO,EAAKiC,MAAMI,OAJtB,SAKH,EAAKgB,SAAS,CAAEhB,MAAOiG,IALpB,uBAMOjJ,EAAY,EAAK4C,MAAM3C,MAAO,EAAK2C,MAAM1C,YAAa,EAAK0C,MAAMzC,KACrD,EAAKyC,MAAMxC,UAAW,EAAKwC,MAAMvC,QAAS,EAAKuC,MAAMxD,UAPxE,OAMLN,EANK,OAQTpC,QAAQC,IAAImC,GAEZkC,MAAM,kBAVG,4C,kGAaX,WAAU,IAAD,OACP,OACI,qBAAKK,MAAO,CAACuD,OAAQ,QAASsE,UAAW,MAAzC,SACE,sBAAKxL,UAAU,YAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,eAACE,EAAA,EAAD,CAAM+D,SAAUa,KAAKb,SAArB,UACE,eAAC/D,EAAA,EAAKgE,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACjE,EAAA,EAAKkE,MAAN,oBACA,cAAClE,EAAA,EAAKmE,QAAN,CACIC,KAAK,OACL2E,YAAY,QACZxE,MAAOK,KAAKI,MAAM3C,MAClBgC,SAAU,SAACnB,GAAD,OAAO,EAAKkD,SAAS,CAAE/D,MAAOa,EAAEoB,OAAOC,cAIvD,eAACvE,EAAA,EAAKgE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACjE,EAAA,EAAKkE,MAAN,0BACA,cAAClE,EAAA,EAAKmE,QAAN,CACIC,KAAK,OACL2E,YAAY,cACZxE,MAAOK,KAAKI,MAAM1C,YAClB+B,SAAU,SAACnB,GAAD,OACN,EAAKkD,SAAS,CAAE9D,YAAaY,EAAEoB,OAAOC,cAKhD,eAACvE,EAAA,EAAKgE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACjE,EAAA,EAAKkE,MAAN,mBACA,cAAClE,EAAA,EAAKmE,QAAN,CACIC,KAAK,OACLG,MAAOK,KAAKI,MAAMzC,KAClB8B,SAAU,SAACnB,GAAD,OAAO,EAAKkD,SAAS,CAAE7D,KAAMW,EAAEoB,OAAOC,cAItD,eAACvE,EAAA,EAAKgE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACjE,EAAA,EAAKkE,MAAN,yBACA,cAAClE,EAAA,EAAKmE,QAAN,CACIC,KAAK,OACLG,MAAOK,KAAKI,MAAMxC,UAClB6B,SAAU,SAACnB,GAAD,OACN,EAAKkD,SAAS,CAAE5D,UAAWU,EAAEoB,OAAOC,cAK9C,eAACvE,EAAA,EAAKgE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACjE,EAAA,EAAKkE,MAAN,uBACA,cAAClE,EAAA,EAAKmE,QAAN,CACIC,KAAK,OACLG,MAAOK,KAAKI,MAAMvC,QAClB4B,SAAU,SAACnB,GAAD,OAAO,EAAKkD,SAAS,CAAE3D,QAASS,EAAEoB,OAAOC,cAIzD,eAACvE,EAAA,EAAKgE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACjE,EAAA,EAAKkE,MAAN,uBACA,cAAClE,EAAA,EAAKmE,QAAN,CACIC,KAAK,SACLG,MAAOK,KAAKI,MAAMxD,SAClB6C,SAAU,SAACnB,GAAD,OACN,EAAKkD,SAAS,CAAE5E,SAAU0B,EAAEoB,OAAOC,cAK7C,cAACrE,EAAA,EAAD,CAAQC,QAAQ,UAAUiE,KAAK,SAA/B,2BAMN,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,gC,GAhHQmH,IAAMnE,YC+BXoE,GApBH,WACV,OACE,0BAAS1L,UAAU,MAAnB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2L,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,IAAD,CAAU1C,GAAG,eAEjB,cAAC,IAAD,CAAO0C,KAAK,eAAeC,UAAWvL,IACtC,cAAC,IAAD,CAAOsL,KAAK,cAAcC,UAAWC,KACrC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWtE,KAChC,cAAC,IAAD,CAAOqE,KAAK,kBAAkBC,UAAWZ,KACzC,cAAC,IAAD,CAAOW,KAAK,UAAUC,UAAWtE,KACjC,cAAC,IAAD,CAAOqE,KAAK,WAAWC,UAAW5G,KAClC,cAAC,IAAD,CAAO2G,KAAK,eAAeC,UAAWE,YCpB/BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAEDC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.ead5f42b.chunk.js","sourcesContent":["import React, {Component, useEffect, useState} from \"react\";\nimport {Navbar, Nav, Button, FormControl} from \"react-bootstrap\";\nimport \"./Navbar.css\";\nimport Form from \"react-bootstrap/Form\";\n\n\nconst NavbarClass = () => {\n    let [loginVisible, setLoginVisible] = useState(true);\n    let [membersVisible, setMembersVisible] = useState(false);\n    let [userName, setUserName] = useState(\"Guest\");\n\n    useEffect(async () => {\n        let name = await localStorage.getItem(\"name\");\n        let isAdmin = await localStorage.getItem(\"isAdmin\");\n        console.log('Is ADMIN????: ', isAdmin);\n        if(name !== null) {\n            setUserName(name);\n            setLoginVisible(false);\n            // isAdmin = await localStorage.getItem(\"isAdmin\");\n            setMembersVisible(isAdmin === \"true\");\n        }\n        else\n        {\n            setUserName(\"Guest\");\n            setLoginVisible(true);\n            isAdmin = false;\n        }\n    });\n    let isRefresh = localStorage.getItem(\"refresh\")\n        if( isRefresh === \"true\"){\n            localStorage.setItem(\"refresh\", \"false\");\n            window.location.reload(false);\n        }\n    let name = localStorage.getItem(\"name\");\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"landing\">SWE - Attendance Tracker</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"landing\">Calendar</Nav.Link>\n                    {membersVisible && <Nav.Link href=\"memberData\">Members</Nav.Link>}\n                    {/*{membersVisible*/}\n                    {/*    ? <Nav.Link href=\"memberData\">Members</Nav.Link>*/}\n                    {/*    : ' '*/}\n                    {/*}*/}\n                    <Nav.Link href=\"login\">Login</Nav.Link>\n                </Nav>\n\n\n                <Form inline>\n                    <Nav.Link className={\"NavbarWelcome\"}>Welcome, {userName}!</Nav.Link>\n                    {!loginVisible && <Nav.Link href=\"accountDetails\">My Account</Nav.Link>}\n                    {loginVisible && <Button href={'/login'} variant=\"primary\">Login</Button>}\n                </Form>\n                {/*<Nav inline>*/}\n                {/*    <Nav.Link disabled={false}>*/}\n                {/*        Welcome, {name === null ? \"Guest\" : name}!*/}\n                {/*    </Nav.Link>*/}\n                {/*    <Button href={\"/login\"}>Login</Button>*/}\n                {/*</Nav>*/}\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default NavbarClass;\n\n//<div style={{display: \"flex\", flex: 1, backgroundColor: '#5a5377'}}>\n{\n    /* <nav className=\"NavbarContainer\">\n  {/*<h1 className=\"navbar-logo\"/>*/\n}\n{\n    /*<div className=\"menu-icon\">*/\n}\n{\n    /*</div>*/\n}\n{\n    /* <ul className='NavbarMenuItems'>\n      {NavMenuItems.map((item, index) => {\n          return (\n              <li className='InnerMapList' key={index}>\n                  <a className={item.cName} href={item.url}>\n                      {item.title}\n                  </a>\n              </li>\n          );\n      })}\n  </ul>\n  </nav> */\n}\n{\n    /*</div> */\n}\n","const AdminPortal = () => {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Admin Portal is showing\n        </header>\n      </div>\n    );\n  }\n\n  export default AdminPortal;\n","// This file serves as an index for all available API calls, broken down into easy to use functions.\n\n// GLOBAL VARIABLES\n\n// Master request, don't touch this one\n\nconst hostUrl = 'https://swe-at.herokuapp.com/';\n\nasync function request(url, body) {\n    let res = await fetch(hostUrl + url,\n        {\n            credentials: 'omit',\n            headers: {\n                accept: 'application/json, text/javascript, */*; q=0.01',\n                'accept-language': 'en-US,en;q=0.9',\n                'content-type': 'application/json;charset=UTF-8',\n                'sec-fetch-mode': 'cors',\n                'sec-fetch-site': 'cross-site',\n            },\n            referrerPolicy: 'no-referrer-when-downgrade',\n            body: JSON.stringify(body),\n            method: 'POST',\n            mode: 'cors',\n        },\n    );\n    res = await res.json();\n    return res;\n}\n\n// --- User Creation and Authentication --- // -------------------------------------------------------------------------\n\nexport async function createUser(firstname, lastname, username, password, email, major, year) {\n    return await request('users/create', {\n        firstname: firstname,   // type: String\n        lastname: lastname,     // type: String\n        username: username,     // type: String\n        password: password,     // type: String\n        email: email,           // type: String\n        major: major,           // type: String\n        year: year,             // type: String\n    });\n}\n\nexport async function loginUser(username, password) {\n    let res = await request('users/login', {\n        username: username,\n        password: password\n    });\n    if(res.token === undefined) {\n        return false;\n    }\n    localStorage.setItem(\"token\", res.token);\n    let user = await getUser(res.token);\n    localStorage.setItem(\n        \"name\",\n        user.user.firstname\n    );\n    localStorage.setItem(\"isAdmin\", user.user.admin);\n    return res.token;\n}\n\n// --- Get Member Data ---------------------------------- // -------------------------------------------------------------------------\n\nexport async function getUsers() {\n    let res = await fetch(hostUrl + 'users');\n    return await res.json();\n}\n\nexport async function getUser(token) {\n    let res = await request('users/getUser', {\n        token: token,\n    });\n    return res;\n}\n\nexport async function getEvents() {\n    let res = await fetch(hostUrl + 'events');\n    return await res.json();\n}\n\n// --- Event Creation and Attendance--------------------- // -------------------------------------------------------------------------\n\nexport async function createEvent(title, description, date, startTime, endTime, password) {\n    return await request('events/create',{\n        title: title,               // type: String\n        description: description,   // type: String\n        date: date,                 // type: Date\n        startTime: startTime,       // type: String\n        endTime: endTime,           // type: String\n        password: password,         // type: String\n    });\n}\n\nexport async function attendEvent(token, eventID, password) {\n    console.log(token, eventID, password);\n    return await request('events/attend', {\n        token: token,               // type: String\n        eventID: eventID,           // type: String\n        password: password          // type: String\n    });\n}\n","import React, { Component } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./Landing.css\";\nimport { OverlayTrigger } from \"react-bootstrap\";\nimport { Popover } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {attendEvent, getEvents, getUser} from \"../API\";\n\nconst localizer = momentLocalizer(moment);\nlet code;\nlet eventVar = {\n    id: \"\",\n};\nlet isAdmin = false;\n\nasync function submitFunc(e) {\n    e.preventDefault();\n    //place the PUT request here\n    if(code === undefined) {\n        return;\n    }\n    let token = await localStorage.getItem(\"token\");\n    let user = await getUser(token);\n    console.log(token, eventVar.id, code);\n    await attendEvent(token, eventVar.id, code);\n    alert('Event attended!');\n\n    //do the attend event functions\n    //then push it to server\n}\n\nfunction Event({ event }) {\n    let popoverClickRootClose = (\n        <Popover id=\"popover-trigger-click-root-close\" style={{ zIndex: 10000 }}>\n            <Modal.Dialog>\n                    <Modal.Title>Sign In Here</Modal.Title>\n\n                <Modal.Body>\n                    <Form onSubmit={submitFunc}>\n                        <Form.Group controlId=\"formBasicDescription\">\n                            <Form.Label>Enter Event Code Here!</Form.Label>\n                            <Form.Control\n                                type=\"String\"\n                                onChange={(e) => {code = e.target.value}}\n                            />\n                        </Form.Group>\n                        <Button type=\"submit\" variant=\"primary\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Modal.Body>\n\n                {/*<Modal.Footer>*/}\n                {/*    */}\n                {/*</Modal.Footer>*/}\n            </Modal.Dialog>\n        </Popover>\n    );\n\n    eventVar = event;\n    return (\n        <div>\n            <div>\n                <OverlayTrigger\n                    id=\"help\"\n                    trigger=\"click\"\n                    rootClose\n                    container={this}\n                    placement=\"bottom\"\n                    overlay={popoverClickRootClose}\n                >\n                    <div>{event.title}</div>\n                </OverlayTrigger>\n            </div>\n        </div>\n    );\n}\n\nclass Landing extends Component {\n    //add the events from DB in here\n    state = {\n        seen: false,\n        events: [\n            {\n                id: String,\n                title: String,\n                start: Date,\n                end: Date,\n            },\n        ],\n        loaded: false,\n    };\n\n    async componentDidMount() {\n        let isRefresh = localStorage.getItem(\"refresh\")\n        if( isRefresh === \"true\"){\n            localStorage.setItem(\"refresh\", \"false\");\n            window.location.reload(false);\n        }\n        const data = await getEvents();\n        let token = await localStorage.getItem(\"token\");\n        let user = await getUser(token);\n        console.log(user.message);\n        if(user.message !== \"Invalid token recieved!\") {\n            console.log(user.message);\n            localStorage.setItem(\"isAdmin\", user.user.admin);\n            isAdmin = user.user.admin;\n        }\n        // let token = localStorage.getItem(\"Token\");\n        // if (token === null) {\n        //     localStorage.setItem(\"name\", \"Guest\");\n        // }\n        for (let i = 0; i < data.length; i++) {\n            this.state.events[i] = {};\n            let dateObj = new Date(data[i].date);\n            console.log(dateObj);\n            let year = dateObj.getFullYear();\n            let month = dateObj.getMonth();\n            let day = dateObj.getDate() + 1;\n            this.state.events[i].start = new Date(year, month, day);\n            this.state.events[i].end = new Date(year, month, day);\n            this.state.events[i].title = data[i].title;\n            this.state.events[i].attendees = data[i].attendees;\n            this.state.events[i].id = data[i]._id;\n            console.log(this.state.events[i].id);\n        }\n\n\n        await this.setState({ loaded: true });\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return (\n                <div className=\"App\">\n                    <Container fluid>\n                        <h1 style={{ height: \"100vh\", color: \"white\" }}>Loading...</h1>\n                    </Container>\n                </div>\n            );\n        }\n        return (\n            <div className=\"App\">\n                <Container fluid>\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                                <Calendar\n                                    localizer={localizer}\n                                    defaultDate={new Date()}\n                                    defaultView=\"month\"\n                                    events={this.state.events}\n                                    style={{\n                                        display: \"flex\",\n                                        margin: \"3vh\",\n                                        padding: \"2vh\",\n                                        borderRadius: \"2vh\",\n                                        height: \"100vh\",\n                                        backgroundColor: \"#EEEEEE\",\n                                    }}\n                                    components={{\n                                        event: Event,\n                                    }}\n                                />\n                            </div>\n                        </Col>\n                        {isAdmin === true && <Col md={2}>\n                            <div className=\"buttonCol\">\n                                <Button\n                                    className=\"CreateEventButton\"\n                                    href=\"/CreateEvent\"\n                                    color=\"primary\"\n                                >\n                                    Create an Event\n                                </Button>\n                            </div>\n                        </Col>}\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Landing;\n","import React, {useEffect, useState} from \"react\";\nimport { Container, Row, Col, Breadcrumb, Form, Button } from \"react-bootstrap\";\nimport \"./Login.css\"\nimport {createUser, loginUser} from \"../API\";\nimport {Redirect} from \"react-router-dom\";\n\n// async function submission(username, password) {\n//     console.log(\"kms\");\n//\n// }\n\nconst Login = () => {\n    let [redirect, setRedirect] = useState(false);\n\n    let [username, setUsername] = useState(\"\");\n    let [password, setPassword] = useState(\"\");\n\n\n\n    let [firstNameSI, setFirstNameSI] = useState(\"\");\n    let [lastNameSI, setLastNameSI] = useState(\"\");\n    let [usernameSI, setUsernameSI] = useState(\"\");\n    let [passwordSI, setPasswordSI] = useState(\"\");\n    let [emailSI, setEmailSI] = useState(\"\");\n    let [confirmPassSI, setConfirmPassSI] = useState(\"\");\n    let [majorSI, setMajorSI] = useState(\"\");\n    let [yearSI, setYearSI] = useState(\"\");\n\n    // ---------------------------- //\n\n    useEffect(() => {\n        // let value = Math.round((Math.random() * 1000)).toString()\n        // setFirstNameSI(\"Jane\");\n        // setLastNameSI(\"Smith\");\n        // setUsernameSI(\"jsmith\" + value.toString());\n        // setEmailSI(\"jsmith\" + value.toString() + \"@gmail.com\");\n        // setPasswordSI(\"password\");\n        // setConfirmPassSI(\"password\");\n        // setMajorSI(\"Engineering\");\n        // setYearSI((Math.round(Math.random() * 5).toString()));\n    }, []);\n\n    const submission = async (e) => {\n        e.preventDefault();\n        let TOKEN = await loginUser(username, password);\n        if (TOKEN === false){\n            alert(\"Incorrect username or password!\");\n            return;\n        }\n        localStorage.setItem(\"token\", TOKEN);\n        localStorage.setItem(\"refresh\", \"true\");\n        setRedirect(true);\n    };\n\n    const submissionSI = async (e) => {\n        e.preventDefault();\n        if(passwordSI !== confirmPassSI) {\n            alert('Make sure your passwords match!');\n            return;\n        }\n        else {\n            let TOKEN = await createUser(firstNameSI, lastNameSI, usernameSI, passwordSI, emailSI, majorSI, yearSI);\n            alert(TOKEN.firstname !== undefined ? \"New User Created!\\nFirstName: \" +\n                TOKEN.firstname + \"\\nLastName: \" + TOKEN.lastname + \"\\nUsername: \" +\n                TOKEN.username + \"\\nEmail: \" + TOKEN.email : \"User already exists!\");\n            if(TOKEN.firstname !== undefined) {\n                let TOKEN = await loginUser(usernameSI, passwordSI);\n                localStorage.setItem(\"token\", TOKEN);\n                localStorage.setItem(\"refresh\", \"true\");\n                setRedirect(true);\n            }\n        }\n    };\n\n    return (\n      <div className=\"LoginClassName\">\n          <Container>\n              <Row className=\"TopLoginRow\">\n                  <Col className=\"LeftLoginCol\" md={{span: 6}}>   {/*md={{span: 3, offset: 2}}*/}\n                      <div className=\"card\">\n                          <h5 className=\"card-header\">Log In</h5>\n                          <div className=\"card-body\">\n                              <Col md={{span: 6, offset: 3}}>\n                                  <Form.Label>Username</Form.Label>\n                                  <Form.Control type=\"formBasicText\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\n                                  <Form.Label>Password</Form.Label>\n                                  <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n                              </Col>\n                          </div>\n                      </div>\n                      <Form className=\"FormGroupLeft\" onSubmit={submission}>\n                          <Form.Group>\n                              <Button variant=\"primary\" className=\"btn btn-block btn-dope\" type=\"submit\">Login</Button>\n                              <p className=\"forgot-password text-right forgotPass\"> <a href=\"#\" className=\"ForgotPass\" >Forgot Password?</a></p>\n                          </Form.Group>\n                      </Form>\n                  </Col>\n\n\n                  <Col className=\"RightLoginCol\" md={{span: 6}}>\n                      <div className=\"card\">\n                          <h5 className=\"card-header\">Sign Up</h5>\n                          <div className=\"card-body\">\n                          <Form className=\"FormGroupRight\">\n                              <Row>\n                              <Col md={{span: 6}}>\n                                  <Form.Label>First Name</Form.Label>\n                                  <Form.Control type=\"formBasicText\" value={firstNameSI} placeholder=\"First Name\" onChange={e => {setFirstNameSI(e.target.value)}}/>\n                                  <Form.Label>Last Name</Form.Label>\n                                  <Form.Control type=\"formBasicText\" value={lastNameSI} placeholder=\"Last Name\" onChange={e => {setLastNameSI(e.target.value)}}/>\n                                  <Form.Label>Username</Form.Label>\n                                  <Form.Control type=\"formBasicText\" value={usernameSI} placeholder=\"Username\" onChange={e => {setUsernameSI(e.target.value)}}/>\n                                  <Form.Label>Email</Form.Label>\n                                  <Form.Control type=\"email\" value={emailSI} placeholder=\"Email\" onChange={e => {setEmailSI(e.target.value)}}/>\n                              </Col>\n                              <Col md={{span: 6}}>\n                                  <Form.Label>Password</Form.Label>\n                                  <Form.Control type=\"password\" value={passwordSI} placeholder=\"Password\" onChange={e => {setPasswordSI(e.target.value)}}/>\n                                  <Form.Label>Password Confirmation</Form.Label>\n                                  <Form.Control type=\"password\" value={confirmPassSI} placeholder=\"Confirm Your Password\" onChange={e => {setConfirmPassSI(e.target.value)}}/>\n                                  <Form.Label>Degree Major</Form.Label>\n                                  <Form.Control type=\"formBasicText\" value={majorSI} placeholder=\"Degree Major\"onChange={e => {setMajorSI(e.target.value)}} />\n                                  <Form.Label>Current Academic Year</Form.Label>\n                                  <Form.Control type=\"formBasicText\" value={yearSI} placeholder=\"Current Academic Year\" onChange={e => {setYearSI(e.target.value)}}/>\n                              </Col>\n                              </Row>\n                          </Form>\n                          </div>\n                      </div>\n                      <Form onSubmit={submissionSI}>\n                        <Button type=\"submit\" variant=\"primary\" className=\"btn btn-block btn-dope\">Sign Up</Button>\n                      </Form>\n                      </Col>\n              </Row>\n          </Container>\n          {redirect && <Redirect to=\"/landing\" />}\n      </div>\n    );\n  }\n\nexport default Login;\n","import React, {useState, useEffect} from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport \"./MemberData.css\";\nimport {getUsers, getEvents} from \"../API\";\n\nconst MemData = () => {\n    let [isLoading, setIsLoading] = useState(true);\n    let [members, setMembers] = useState(undefined);\n    let [user, setUser] = useState();\n    let [events, setEvents] = useState();\n    let [event, setEvent] = useState();\n    let [membersOrEvents, setMembersOrEvents] = useState(true);\n\n    // Search State Objects\n    let [searchQuery, setSearchQuery] = useState(\"\");\n    let [searchUsers, setSearchUsers] = useState(undefined)\n    let [searchEvents, setSearchEvents] = useState(undefined);\n\n    useEffect(async () => {\n        let users = await getUsers();\n        let events = await getEvents();\n        setMembers(users);\n        setSearchUsers(users);\n        setUser(users[0]);\n        setEvents(events);\n        setSearchEvents(events);\n        setEvent(events[0]);\n        setIsLoading(false);\n    }, []);\n\n    const searchHandler = e => {\n        e.preventDefault();\n        if(membersOrEvents) {\n            setSearchUsers(members.filter((i, n) =>\n            {\n                console.log(\"Search Query: \", searchQuery);\n                return i.firstname.toLowerCase().includes(searchQuery) |\n                       i.lastname.toLowerCase().includes(searchQuery);\n            }));\n            // setUser(searchUsers[0]);\n        }\n        else\n        {\n            setSearchEvents(events.filter((i, n) =>\n            {\n                console.log(\"Search Query: \", searchQuery);\n                return i.title.toLowerCase().includes(searchQuery);\n            }));\n            // setEvent(searchEvents[0]);\n        }\n    };\n\n    if (isLoading) {\n        return (\n            <div className=\"App\">\n                <Container fluid>\n                    <h1 style={{ height: \"100vh\", color: \"white\" }}>Loading...</h1>\n                </Container>\n            </div>\n        );\n    }\n\n    //-------------------Nick's Stuff\n\n    // const editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    // }\n    //\n    // const dynamicSearch = () => {\n    //     return this.state.names.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    // }\n    //\n    // const render = () => {\n    //     return (\n    //         <div style = {{textAlign: 'center', paddingTop: '30vh'}}>\n    //             <input type = 'text' value = {this.state.searchTerm} onChange = {this.editSearchTerm} placeholder = 'Search for a name'/>\n    //             <br></br>\n    //             <h3>These are names:</h3>\n    //             <events event = {this.dynamicSearch()}/>\n    //         </div>\n    //     );\n    // }\n\n    //-------------------Pls help\n\n    return (\n        <div className=\"ClassNameBigDiv\">\n            <header className=\"HeaderClassName\">Active Members</header>\n            <Container>\n                <Row className=\"RowButtons\">\n                    <Col>\n                        <Button\n                            variant=\"primary\"\n                            className=\"btn btn-lg btn-dope\"\n                            style={{ span: 3, offset: 5 }}\n                            onClick={() => setMembersOrEvents(true)}\n                        >\n                            Members\n                        </Button>\n                    </Col>\n                    <Col>\n                        <Button\n                            variant=\"primary\"\n                            className=\"btn btn-lg btn-dope\"\n                            aria-pressed=\"true\"\n                            onClick={() => setMembersOrEvents(false)}\n                        >\n                            Events\n                        </Button>\n                    </Col>\n                </Row>\n                <Row className=\"RowSplitPage\">\n                    <Col>\n                        <Form className=\"form-inline my-2 my-lg-0\" onSubmit={searchHandler}>\n                            <input\n                                className=\"form-control mr-sm-2\"\n                                type=\"search\"\n                                placeholder={membersOrEvents ? \"Search for Members:\" : \"Search for Events:\"}\n                                aria-label=\"Search\"\n                                onChange={event => setSearchQuery(event.target.value.toLowerCase())}\n                            />\n                            <button\n                                className=\"btn btn-outline-success my-2 my-sm-0\"\n                                type=\"submit\"\n                            >\n                                Search\n                            </button>\n                        </Form>\n                        <br />\n                        <div className=\"form-group\">\n                            <label\n                                htmlFor=\"exampleFormControlSelect2\"\n                                style={{ color: \"white\" }}\n                            >\n                                List of {membersOrEvents ? \"Members\" : \"Events\"}\n                            </label>\n                            <select\n                                multiple\n                                className=\"form-control\"\n                                id=\"exampleFormControlSelect2\"\n                            >\n                                {membersOrEvents ?\n                                    searchUsers.map(user => <option onClick={() => setUser(user)}>{user.lastname}, {user.firstname}</option>) :\n                                    searchEvents.map(events => <option onClick={() => setEvent(events)}>{events.title}</option>)}\n                            </select>\n                        </div>\n                        {/*</div>*/}\n                    </Col>\n                    <Col>\n                        {/*<Form>*/}\n                        {/*    This side is for all the available information allowed to see by different users*/}\n                        {/*</Form>*/}\n                        <div className=\"card\">\n                            <div className=\"card-header\"> {membersOrEvents ? user.firstname + \" \" + user.lastname : \"Events\"} </div>\n                            <div className=\"card-body\">\n                                <Row className=\"sizeTest\">\n                                    <Col md={{span: 4}}>\n                                        <h5 className=\"card-title\" align=\"left\">\n                                            {membersOrEvents ?\n                                                \"Username:\" :\n                                                \"EventName:\"}\n\n                                            <br />\n                                            {membersOrEvents ?\n                                                \"Points:\" :\n                                                \"\"}\n                                            <br />\n                                            {membersOrEvents ?\n                                                \"Major:\" :\n                                                \"Participants:\"}\n                                            <br />\n                                            {membersOrEvents ?\n                                                \"Academic Year:\" :\n                                                \"\"}\n                                        </h5>\n                                    </Col>\n                                    <Col md={{span: 4}}>\n                                        <h5 className=\"card-title\" align=\"left\">\n                                            {membersOrEvents ?\n                                                user.username :\n                                                event.title }\n                                            <br />\n                                            {membersOrEvents ?\n                                                user.points :\n                                                \"\"}\n                                            <br />\n                                            {membersOrEvents ?\n                                                user.major :\n                                                event.attendeesNames.map(name => {return name + \"\\n\"})}\n                                            <br />\n                                            {membersOrEvents ?\n                                                user.year :\n                                                \"\"}\n                                        </h5>\n                                    </Col>\n                                </Row>\n                                <p className=\"card-text\">\n                                    {/*Show personal biography here? Large area for information.*/}\n                                </p>\n                            </div>\n                        </div>\n                        <br />\n                        {/*<button*/}\n                        {/*    className=\"btn btn-outline-success my-2 my-sm-0\"*/}\n                        {/*    type=\"submit\"*/}\n                        {/*>*/}\n                        {/*    Export to CSV*/}\n                        {/*</button>*/}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default MemData;\n","import React, {useEffect, useState} from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport {getUser} from \"../API\";\nimport { Row, Col } from \"react-bootstrap\";\nimport './AccountDetails.css'\n\nconst AccountDetails = () => {\n    let [points, setPoints] = useState(0);\n    let [user, setUser] = useState(undefined);\n    let [loading, setLoading] = useState(true);\n    useEffect(async () => {\n        let user = await getUser(localStorage.getItem(\"token\"));\n        setUser(user);\n        setPoints(user.user.points);\n        setLoading(false);\n        setLoading(false);\n    });\n    // useEffect( () => {\n    //     async function getPoints() {\n    //         let user = await getUser(localStorage.getItem(\"token\"));\n    //         setUser(user);\n    //         setPoints(user.user.points);\n    //         setLoading(false);\n    //     }\n    //     console.log(\"test\");\n    // }, []);\n    if(loading) {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h1>Loading...</h1>\n                </header>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className=\"card\">\n                    <h5 className=\"card-header\">Hello {user === undefined ? \"Guest\" : user.user.firstname + \" \" + user.user.lastname}!</h5>\n                        <div className=\"card-body\">\n                            <Col md={{span: 10, offset: 1}}>\n                                <h4>Email Address: {user === undefined ? \"None\" : user.user.email}</h4>\n                                <h4>Username: {user === undefined ? \"None\" : user.user.username} </h4>\n                                <h4>Total Points: {points}</h4>\n                                <br />\n                                <Button href=\"/landing\" onClick={() => {{localStorage.removeItem(\"name\"); localStorage.removeItem(\"token\"); localStorage.setItem(\"isAdmin\", \"false\")}}} variant={\"danger\"} className={\"\"}>Logout</Button>\n                            </Col>\n                          </div>\n                      </div>\n                </header>\n        </div>\n    );\n};\n\nexport default AccountDetails;\n","import \"./CreateEvent.css\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Button } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport {createEvent} from \"../../API\";\n\nclass Popup extends React.Component {\n  state = {\n    title: \"New Event\",\n    description: \"Event Description\",\n    date: undefined,\n    end: undefined,\n    startTime: undefined,\n    endTime: undefined,\n    password: \"\",\n  };\n  //GENERATE RANDOM CODE TO BE DISPLAYED\n  onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"feet\");\n    console.log(this.state.start);\n    let dateIn = moment(this.state.start);\n    await this.setState({ start: dateIn });\n    let res = await createEvent(this.state.title, this.state.description, this.state.date,\n                                this.state.startTime, this.state.endTime, this.state.password);\n    console.log(res);\n    //window.location.replace(\"Landing\") trying to get the function to reroute\n    alert('Event created!');\n  };\n\n  render() {\n    return (\n        <div style={{height: \"100vh\", marginTop: '1%'}}>\n          <div className=\"container\">\n            <div className=\"row test\">\n              <div className=\"col-md-4 offset-md-4 design\">\n                <Form onSubmit={this.onSubmit}>\n                  <Form.Group controlId=\"formBasicTitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Title\"\n                        value={this.state.title}\n                        onChange={(e) => this.setState({ title: e.target.value })}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicDescription\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        value={this.state.description}\n                        onChange={(e) =>\n                            this.setState({ description: e.target.value })\n                        }\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicDescription\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                        type=\"date\"\n                        value={this.state.date}\n                        onChange={(e) => this.setState({ date: e.target.value })}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicDescription\">\n                    <Form.Label>Start Time</Form.Label>\n                    <Form.Control\n                        type=\"time\"\n                        value={this.state.startTime}\n                        onChange={(e) =>\n                            this.setState({ startTime: e.target.value })\n                        }\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicDescription\">\n                    <Form.Label>End Time</Form.Label>\n                    <Form.Control\n                        type=\"time\"\n                        value={this.state.endTime}\n                        onChange={(e) => this.setState({ endTime: e.target.value })}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicDescription\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"string\"\n                        value={this.state.password}\n                        onChange={(e) =>\n                            this.setState({ password: e.target.value })\n                        }\n                    />\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              </div>\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Popup;\n","import './App.css';\nimport React from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport 'bootstrap/dist/css/bootstrap.min.css';      //Bootstrap link suggested to do this\n\nimport {\n    BrowserRouter as Router, Redirect,\n    Route,\n} from \"react-router-dom\";\n\nimport AdminPortal from \"./components/AdminPortal\"; /* is this taking the .js files or ALL files with its same name, regardless of ending (.js, .css, .html)*/\nimport Landing from \"./components/Landing\";\nimport Login from \"./components/Login\";\nimport MemberData from \"./components/MemberData\";\nimport AccountDetails from \"./components/AccountDetails\";\nimport SignUp from \"./components/SignUp\";\nimport CreateEvent from \"./components/CreateEvent/CreateEvent\"\n\nconst App = () => {\n  return (\n    <section className=\"App\">\n      <Navbar />\n      <Router>\n        <Route exact path=\"/\">\n            <Redirect to=\"/landing\" />\n        </Route>\n        <Route path=\"/adminPortal\" component={AdminPortal} />\n        <Route path=\"/memberData\" component={MemberData} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/accountDetails\" component={AccountDetails} />\n        <Route path=\"/signUp\" component={Login} />\n        <Route path=\"/landing\" component={Landing} />\n        <Route path=\"/createEvent\" component={CreateEvent} />\n      </Router>\n    </section>\n\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}